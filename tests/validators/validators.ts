import { defineSchema, Infer } from "../../lib";

const schema = defineSchema({
  string: { in: "body", isString: true },
  alphanumeric: { in: "body", isAlphanumeric: true },
  ascii: { in: "body", isAscii: true },
  base32: { in: "body", isBase32: true },
  base58: { in: "body", isBase58: true },
  base64: { in: "body", isBase64: true },
  boolean: { in: "body", isBoolean: true },
  btcAddress: { in: "body", isBtcAddress: true },
  currency: { in: "body", isCurrency: true },
  dataURI: { in: "body", isDataURI: true },
  decimal: { in: "body", isDecimal: true },
  email: { in: "body", isEmail: true },
  ethereumAddress: { in: "body", isEthereumAddress: true },
  float: { in: "body", isFloat: true },
  hash: { in: "body", isHash: true },
  hexColor: { in: "body", isHexColor: true },
  hexadecimal: { in: "body", isHexadecimal: true },
  int: { in: "body", isInt: true },

  // TODO work these

  after: { in: "body", isAfter: true },
  alpha: { in: "body", isAlpha: true },
  array: { in: "body", isArray: true },
  object: { in: "body", isObject: true },
  before: { in: "body", isBefore: true },
  bIC: { in: "body", isBIC: true },
  byteLength: { in: "body", isByteLength: true },
  creditCard: { in: "body", isCreditCard: true },
  date: { in: "body", isDate: true },
  divisibleBy: { in: "body", isDivisibleBy: true },
  eAN: { in: "body", isEAN: true },
  empty: { in: "body", isEmpty: true },
  fQDN: { in: "body", isFQDN: true },
  fullWidth: { in: "body", isFullWidth: true },
  halfWidth: { in: "body", isHalfWidth: true },
  hSL: { in: "body", isHSL: true },
  iBAN: { in: "body", isIBAN: true },
  identityCard: { in: "body", isIdentityCard: true },
  iMEI: { in: "body", isIMEI: true },
  iP: { in: "body", isIP: true },
  iPRange: { in: "body", isIPRange: true },
  iSBN: { in: "body", isISBN: true },
  iSSN: { in: "body", isISSN: true },
  iSIN: { in: "body", isISIN: true },
  iSO8601: { in: "body", isISO8601: true },
  iSO31661Alpha2: { in: "body", isISO31661Alpha2: true },
  iSO31661Alpha3: { in: "body", isISO31661Alpha3: true },
  iSO4217: { in: "body", isISO4217: true },
  iSRC: { in: "body", isISRC: true },
  in: { in: "body", isIn: true },
  jSON: { in: "body", isJSON: true },
  jWT: { in: "body", isJWT: true },
  latLong: { in: "body", isLatLong: true },
  length: { in: "body", isLength: true },
  licensePlate: { in: "body", isLicensePlate: true },
  locale: { in: "body", isLocale: true },
  lowercase: { in: "body", isLowercase: true },
  magnetURI: { in: "body", isMagnetURI: true },
  mACAddress: { in: "body", isMACAddress: true },
  mD5: { in: "body", isMD5: true },
  mimeType: { in: "body", isMimeType: true },
  mobilePhone: { in: "body", isMobilePhone: true },
  mongoId: { in: "body", isMongoId: true },
  multibyte: { in: "body", isMultibyte: true },
  numeric: { in: "body", isNumeric: true },
  octal: { in: "body", isOctal: true },
  passportNumber: { in: "body", isPassportNumber: true },
  port: { in: "body", isPort: true },
  postalCode: { in: "body", isPostalCode: true },
  rgbColor: { in: "body", isRgbColor: true },
  rFC3339: { in: "body", isRFC3339: true },
  semVer: { in: "body", isSemVer: true },
  slug: { in: "body", isSlug: true },
  strongPassword: { in: "body", isStrongPassword: true },
  surrogatePair: { in: "body", isSurrogatePair: true },
  taxID: { in: "body", isTaxID: true },
  uRL: { in: "body", isURL: true },
  uUID: { in: "body", isUUID: true },
  uppercase: { in: "body", isUppercase: true },
  variableWidth: { in: "body", isVariableWidth: true },
  vAT: { in: "body", isVAT: true },
  whitelisted: { in: "body", isWhitelisted: true },
} as const);

type mySchema = typeof schema;
type myObject = Infer<typeof schema>;
